;; ref: http://www.mygooglest.com/fni/stumpwm.html
(in-package :stumpwm)

(run-shell-command "rm .xsession-errors")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; stumpwm config
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(setf *shell-program* "/bin/zsh")
(setf *window-format* "%c")
(setf *message-window-gravity* :top-left
      *input-window-gravity*   :top-left)
(set-prefix-key (kbd "C-q"))

(set-focus-color :cyan)
(set-normal-gravity :top) ; top for terminals
(set-maxsize-gravity :center) ; center for floating X apps
(set-transient-gravity :center) ; center for save-as/open popups

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; some useful functions
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defun run-shl (&rest cmd)
  "A simpler command to run-shell-command with multiple params"
  (run-shell-command (apply #'concatenate 'string cmd)))

(defmacro roraise-and-touchpad-off (command class)
  "Wrap a call to the run-ra-raise command but before toggle off the touchpad"
  `(progn
     (run-shell-command "touchpad-off")
     (stumpwm::banish)
     (run-or-raise ,command ,class)))

(defmacro roraise-and-touchpad-on (command class)
  "Wrap a call to the run-ra-raise command but before toggle on the touchpad"
  `(progn
     (run-shell-command "touchpad-on")
     (run-or-raise ,command ,class)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; some useful commands
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defcommand toggle-touchpad-auto () ()
  "Activate/Deactivate automatically the touchpad depending on the current status."
  (run-shl "toggle-touchpad")
  (stumpwm::banish))

(defcommand screenshot (filename) ((:rest "Filename: "))
  (run-shell-command
   (roraise-and-touchpad-on nil "import ~a/screenshots/~a" (user-homedir-pathname) filename)))

(defcommand chrome () ()
  "Start google-chrome or switch to it, if it is already running."
  (roraise-and-touchpad-on "google-chrome" '(:class "google-chrome")))

(defcommand firefox () ()
  "Start Firefox or switch to it, if it is already running."
  (roraise-and-touchpad-on "firefox" '(:class "Firefox")))

(defcommand urxvt () ()
  "Start an urxvt instance or switch to it, if it is already running."
  (roraise-and-touchpad-off "urxvtc" '(:instance "urxvt")))

(defcommand myemacs () ()
  (roraise-and-touchpad-off "emacs" '(:instance "emacs")))

(defcommand record () ()
  (roraise-and-touchpad-on "gtk-recordmydesktop" "gtk-recordmydesktop"))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; keyboard shortcuts
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(define-key *root-map* (kbd "Print") "screenshot")
(define-key *root-map* (kbd "c") "chrome")
(define-key *root-map* (kbd "f") "firefox")
(define-key *root-map* (kbd "t") "urxvt")
(define-key *root-map* (kbd "e") "myemacs")
(define-key *root-map* (kbd "T") "toggle-touchpad-auto")
(define-key *top-map* (kbd "M-TAB") "pull-hidden-next")

(urxvt)
